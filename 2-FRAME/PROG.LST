Turbo Assembler	 Version 4.1	    02/12/24 09:31:00	    Page 1
prog.asm



      1	0000			     .model tiny
      2				     .286
      3	0000			     .code
      4				     org 100h
      5
      6				     include ..\macros.asm
1     7
1     8				     EOP     macro
1     9						     mov ax, 4c00h
1    10						     int 21h
1    11					     endm		     ; end of program
1    12
     13
     14	0100  E9 00DA		     Start:	     jmp main
     15
     16	      =0050		     ScreenWidth     equ 80
     17	      =001A		     ScreenHeight    equ 26
     18
     19	      =0087		     ShadowAttrMask  equ 10000111b
     20
     21	      =004E		     FrameColorAttr  equ 01001110b
     22	      =00C9		     TLCorner	     equ 0c9h
     23	      =00BB		     TRCorner	     equ 0bbh
     24	      =00C8		     BLCorner	     equ 0c8h
     25	      =00BC		     BRCorner	     equ 0bch
     26	      =00BA		     VLine	     equ 0bah
     27	      =00CD		     HLine	     equ 0cdh
     28	      =0020		     Space	     equ ' '
     29
     30	      =0005		     FrameBegLine    equ 5
     31	      =0014		     FrameBegCol     equ 20
     32	      =0028		     FrameWidth	     equ 40
     33	      =000A		     FrameHeight     equ 10
     34
     35				     ;--------------------------------------
     36				     ; Draws symbol
     37				     ; Entry:	     dh	- line num
     38				     ;		     dl	- col num
     39				     ;		     cl	- symbol
     40				     ;		     ch	- attr
     41				     ; Assumes:	     es	= 0b800h
     42				     ; Destr:	     ax, bx
     43				     ;--------------------------------------
     44	0103			     DrawSymbol	     proc
     45
     46	0103  52				     push dx
     47
     48	0104  8A C6				     mov al, dh
     49	0106  B3 50				     mov bl, ScreenWidth
     50	0108  F6 E3				     mul bl	; ax = dh * ScreenWidth
     51
     52	010A  32 F6				     xor dh, dh
     53	010C  03 C2				     add ax, dx	; ax +=	dl (col	num)
     54
     55	010E  D1 E0				     shl ax, 1 ; ax *= 2
     56
     57	0110  8B D8				     mov bx, ax
Turbo Assembler	 Version 4.1	    02/12/24 09:31:00	    Page 2
prog.asm



     58	0112  26: 89 0F				     mov word ptr es:[bx], cx
     59
     60	0115  5A				     pop dx
     61	0116  C3				     ret
     62	0117					     endp
     63				     ;--------------------------------------
     64
     65				     ;--------------------------------------
     66				     ; Modifies	symbol attr (applies & operation with attr mask)
     67				     ; Entry:	     dh	- line num
     68				     ;		     dl	- col num
     69				     ;		     ch	- attr mask
     70				     ; Assumes:	     es	= 0b800h
     71				     ; Destr:	     ax, bx
     72				     ;--------------------------------------
     73	0117			     ModSymbolAttr   proc
     74
     75	0117  52				     push dx
     76
     77	0118  8A C6				     mov al, dh
     78	011A  B3 50				     mov bl, ScreenWidth
     79	011C  F6 E3				     mul bl	; ax = dh * ScreenWidth
     80
     81	011E  32 F6				     xor dh, dh
     82	0120  03 C2				     add ax, dx	; ax +=	dl (col	num)
     83
     84	0122  D1 E0				     shl ax, 1 ; ax *= 2
     85
     86	0124  8B D8				     mov bx, ax
     87	0126  43				     inc bx ; attr address
     88
     89	0127  26: 20 2F				     and byte ptr es:[bx], ch
     90
     91	012A  5A				     pop dx
     92	012B  C3				     ret
     93	012C					     endp
     94				     ;--------------------------------------
     95
     96				     ;--------------------------------------
     97				     ; Draws frame
     98				     ; Entry:
     99				     ; Assumes:	     es	= 0b800h
    100				     ; Destr:	     ax, bx, cx, dx
    101				     ;--------------------------------------
    102	012C			     DrawFrame	     proc
    103
    104						     ; init attr
    105	012C  B5 4E				     mov ch, FrameColorAttr
    106
    107	012E  B6 05				     mov dh, FrameBegLine
    108
    109						     ; top empty line
    110	0130  B1 20				     mov cl, Space
    111	0132  E8 002E				     call DrawFrameEmptyLine
    112	0135  FE C6				     inc dh
    113
    114						     ; top line
Turbo Assembler	 Version 4.1	    02/12/24 09:31:00	    Page 3
prog.asm



    115	0137  B1 C9				     mov cl, TLCorner
    116	0139  B4 CD				     mov ah, HLine
    117	013B  B0 BB				     mov al, TRCorner
    118	013D  E8 0032				     call DrawFrameLine
    119
    120						     ; middle lines
    121	0140  FE C6		     DFWhile:	     inc dh
    122	0142  80 FE 0C				     cmp dh, FrameHeight - 3 + FrameBegLine
    123	0145  77 0B				     ja	DFWhileEnd
    124
    125	0147  B1 BA				     mov cl, VLine
    126	0149  B4 20				     mov ah, Space
    127	014B  B0 BA				     mov al, VLine
    128	014D  E8 0022				     call DrawFrameLine
    129	0150  EB EE				     jmp DFWhile
    130	0152			     DFWhileEnd:
    131
    132						     ; bottom line
    133	0152  B1 C8				     mov cl, BLCorner
    134	0154  B4 CD				     mov ah, HLine
    135	0156  B0 BC				     mov al, BRCorner
    136	0158  E8 0017				     call DrawFrameLine
    137	015B  FE C6				     inc dh
    138
    139						     ; bottom empty line
    140	015D  B1 20				     mov cl, Space
    141	015F  E8 0001				     call DrawFrameEmptyLine
    142
    143	0162  C3				     ret
    144	0163					     endp
    145				     ;---------------------------------------
    146
    147				     ;---------------------------------------
    148				     ; Draws one line of fram (1 symbol	+ n symbols + 1	symbol)
    149				     ;
    150				     ; Entry:	     dh	- line number
    151				     ;		     ch	- color	attr
    152				     ;		     cl	- empty	symbol
    153				     ; Assumes:	     es	= 0b800h
    154				     ;
    155				     ; Destr:	     ax, bx, cl, dl
    156				     ;--------------------------------------
    157	0163			     DrawFrameEmptyLine	     proc
    158
    159	0163  B2 14				     mov dl, FrameBegCol
    160
    161						     ; while (dl++ < FrameWidth	+ FrameBegCol -	1):
    162						     ;	     DrawSymbol()
    163	0165  80 FA 3B		     DFLEwhile:	     cmp dl, FrameWidth	+ FrameBegCol -	1
    164	0168  77 07				     ja	DFLEwhileEnd
    165
    166	016A  E8 FF96				     call DrawSymbol
    167
    168	016D  FE C2				     inc dl
    169	016F  EB F4				     jmp DFLEwhile
    170	0171			     DFLEwhileEnd:
    171
Turbo Assembler	 Version 4.1	    02/12/24 09:31:00	    Page 4
prog.asm



    172	0171  C3				     ret
    173	0172					     endp
    174
    175				     ;--------------------------------------
    176
    177				     ;--------------------------------------
    178				     ; Draws one line of fram (1 symbol	+ n symbols + 1	symbol)
    179				     ;
    180				     ; Entry:	     dh	- line number
    181				     ;		     ch	- color	attr
    182				     ;		     cl	- left symbol
    183				     ;		     ah	- middle symbol
    184				     ;		     al	- right	symbol
    185				     ; Assumes:	     es	= 0b800h
    186				     ;
    187				     ; Destr:	     ax, bx, cl, dl
    188				     ;-------------------------------------
    189	      =0024		     MidSymNumber    equ FrameWidth - 4
    190
    191	0172			     DrawFrameLine   proc
    192
    193	0172  50				     push ax ; right and middle	symbols
    194	0173  50				     push ax
    195	0174  51				     push cx ; left symbol
    196
    197						     ; write empty symbol
    198	0175  B2 14				     mov dl, FrameBegCol
    199	0177  B1 20				     mov cl, Space
    200	0179  E8 FF87				     call DrawSymbol
    201
    202						     ; write left symbol
    203	017C  FE C2				     inc dl
    204	017E  5B				     pop bx
    205	017F  8A CB				     mov cl, bl
    206	0181  E8 FF7F				     call DrawSymbol
    207
    208						     ; write middle symbols
    209	0184  5B				     pop bx
    210	0185  8A CF				     mov cl, bh
    211
    212						     ; while (dl++ < MidSymNumber + (FrameBegCol + 1)):
    213						     ;	     DrawSymbol()
    214	0187  FE C2		     DFLwhile:	     inc dl
    215	0189  80 FA 39				     cmp dl, MidSymNumber + (FrameBegCol + 1)
    216	018C  77 05				     ja	DFLwhileEnd
    217
    218	018E  E8 FF72				     call DrawSymbol
    219
    220	0191  EB F4				     jmp DFLWhile
    221	0193			     DFLwhileEnd:
    222						     ; write right symbol
    223	0193  5B				     pop bx
    224	0194  8A CB				     mov cl, bl
    225	0196  E8 FF6A				     call DrawSymbol
    226
    227						     ; write empty symbol
    228	0199  FE C2				     inc dl
Turbo Assembler	 Version 4.1	    02/12/24 09:31:00	    Page 5
prog.asm



    229	019B  B1 20				     mov cl, Space
    230	019D  E8 FF63				     call DrawSymbol
    231
    232	01A0  C3				     ret
    233	01A1					     endp
    234
    235				     ;--------------------------------------
    236
    237				     ;--------------------------------------
    238				     ; Draws shadow
    239				     ;
    240				     ; Entry:
    241				     ; Assumes:	     es	= 0b800h
    242				     ;
    243				     ; Destr:
    244				     ;--------------------------------------
    245	01A1			     DrawShadow	     proc
    246
    247	01A1  B5 87				     mov ch, ShadowAttrMask
    248	01A3  B6 06				     mov dh, FrameBegLine + 1
    249	01A5  B2 3C				     mov dl, FrameBegCol + FrameWidth
    250
    251	01A7  80 FE 0F		     DSvertWhile:    cmp dh, FrameBegLine + FrameHeight
    252	01AA  77 0E				     ja	DSvertWhileEnd
    253
    254	01AC  E8 FF68				     call ModSymbolAttr
    255	01AF  FE C2				     inc dl
    256	01B1  E8 FF63				     call ModSymbolAttr
    257	01B4  FE CA				     dec dl
    258
    259	01B6  FE C6				     inc dh
    260	01B8  EB ED				     jmp DSvertWhile
    261	01BA			     DSvertWhileEnd:
    262	01BA  FE CE				     dec dh
    263
    264	01BC  80 FA 16		     DShorWhile:     cmp dl, FrameBegCol + 2 ; 2 symbols margin
    265	01BF  72 07				     jb	DShorWhileEnd
    266
    267	01C1  E8 FF53				     call ModSymbolAttr
    268	01C4  FE CA				     dec dl
    269	01C6  EB F4				     jmp DShorWhile
    270	01C8			     DShorWhileEnd:
    271
    272	01C8  C3				     ret
    273	01C9					     endp
    274				     ;--------------------------------------
    275
    276				     ;--------------------------------------
    277				     ; Paints console in blue
    278				     ;
    279				     ; Entry:
    280				     ; Assumes:	     es	= 0b800h
    281				     ; Destr:	     ch, bx
    282				     ;--------------------------------------
    283	01C9			     MakeConsoleBrightAgain  proc
    284
    285	01C9  B5 1F				     mov ch, 00011111b
Turbo Assembler	 Version 4.1	    02/12/24 09:31:00	    Page 6
prog.asm



    286	01CB  BB 0001				     mov bx, 1
    287
    288	01CE  81 FB 1040	     MCBAwhile:	     cmp bx, ScreenHeight * ScreenWidth	* 2
    289	01D2  77 08				     ja	MCBAwhileEnd
    290
    291	01D4  26: 88 2F				     mov byte ptr es:[bx], ch
    292	01D7  83 C3 02				     add bx, 2
    293
    294	01DA  EB F2				     jmp MCBAwhile
    295	01DC			     MCBAwhileEnd:
    296
    297	01DC  C3				     ret
    298	01DD					     endp
    299				     ;--------------------------------------
    300
    301				     ;======================================
    302	01DD			     main:
    303	01DD  BB B800				     mov bx, 0b800h
    304	01E0  8E C3				     mov es, bx	; videomem seg
    305
    306	01E2  E8 FFE4				     call MakeConsoleBrightAgain
    307
    308	01E5  E8 FF44				     call DrawFrame
    309	01E8  E8 FFB6				     call DrawShadow
    310
    311						     EOP
1   312	01EB  B8 4C00				     mov ax, 4c00h
1   313	01EE  CD 21				     int 21h
    314
    315				     end	     Start
Turbo Assembler	 Version 4.1	    02/12/24 09:31:00	    Page 7
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/12/24"
??FILENAME			  Text	 "prog	  "
??TIME				  Text	 "09:31:00"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0707H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 PROG
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BLCORNER			  Number 00C8
BRCORNER			  Number 00BC
DFLEWHILE			  Near	 DGROUP:0165
DFLEWHILEEND			  Near	 DGROUP:0171
DFLWHILE			  Near	 DGROUP:0187
DFLWHILEEND			  Near	 DGROUP:0193
DFWHILE				  Near	 DGROUP:0140
DFWHILEEND			  Near	 DGROUP:0152
DRAWFRAME			  Near	 DGROUP:012C
DRAWFRAMEEMPTYLINE		  Near	 DGROUP:0163
DRAWFRAMELINE			  Near	 DGROUP:0172
DRAWSHADOW			  Near	 DGROUP:01A1
DRAWSYMBOL			  Near	 DGROUP:0103
DSHORWHILE			  Near	 DGROUP:01BC
DSHORWHILEEND			  Near	 DGROUP:01C8
DSVERTWHILE			  Near	 DGROUP:01A7
DSVERTWHILEEND			  Near	 DGROUP:01BA
FRAMEBEGCOL			  Number 0014
FRAMEBEGLINE			  Number 0005
FRAMECOLORATTR			  Number 004E
FRAMEHEIGHT			  Number 000A
FRAMEWIDTH			  Number 0028
HLINE				  Number 00CD
MAIN				  Near	 DGROUP:01DD
MAKECONSOLEBRIGHTAGAIN		  Near	 DGROUP:01C9
MCBAWHILE			  Near	 DGROUP:01CE
MCBAWHILEEND			  Near	 DGROUP:01DC
MIDSYMNUMBER			  Number 0024
MODSYMBOLATTR			  Near	 DGROUP:0117
SCREENHEIGHT			  Number 001A
SCREENWIDTH			  Number 0050
SHADOWATTRMASK			  Number 0087
SPACE				  Number 0020
START				  Near	 DGROUP:0100
TLCORNER			  Number 00C9
TRCORNER			  Number 00BB
VLINE				  Number 00BA
Turbo Assembler	 Version 4.1	    02/12/24 09:31:00	    Page 8
Symbol Table




Macro Name

EOP

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  01F0 Word	  Public  CODE
