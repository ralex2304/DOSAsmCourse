Turbo Assembler	 Version 4.1	    02/10/24 21:48:08	    Page 1
prog.asm



      1	0000			     .model tiny
      2				     .286
      3	0000			     .code
      4				     org 100h
      5
      6				     include ..\macros.asm
1     7
1     8				     EOP     macro
1     9						     mov ax, 4c00h
1    10						     int 21h
1    11					     endm		     ; end of program
1    12
     13
     14	0100  E9 00DF		     Start:	     jmp main
     15
     16	      =0050		     ScreenWidth     equ 80
     17	      =001A		     ScreenHeight    equ 26
     18
     19	      =0087		     ShadowAttrMask  equ 10000111b
     20
     21	      =004E		     FrameColorAttr  equ 01001110b
     22	      =00C9		     TLCorner	     equ 0c9h
     23	      =00BB		     TRCorner	     equ 0bbh
     24	      =00C8		     BLCorner	     equ 0c8h
     25	      =00BC		     BRCorner	     equ 0bch
     26	      =00BA		     VLine	     equ 0bah
     27	      =00CD		     HLine	     equ 0cdh
     28	      =0020		     Space	     equ ' '
     29
     30	      =0005		     FrameBegLine    equ 5
     31	      =0014		     FrameBegCol     equ 20
     32	      =0028		     FrameWidth	     equ 40
     33	      =000A		     FrameHeight     equ 10
     34
     35				     ;--------------------------------------
     36				     ; Draws symbol
     37				     ; Entry:	     dh	- line num
     38				     ;		     dl	- col num
     39				     ;		     cl	- symbol
     40				     ;		     ch	- attr
     41				     ; Assumes:	     es	= 0b800h
     42				     ; Destr:	     ax, bx
     43				     ;--------------------------------------
     44	0103			     DrawSymbol	     proc
     45
     46	0103  52				     push dx
     47
     48	0104  8A C6				     mov al, dh
     49	0106  B3 50				     mov bl, ScreenWidth
     50	0108  F6 E3				     mul bl	; ax = dh * ScreenWidth
     51
     52	010A  32 F6				     xor dh, dh
     53	010C  03 C2				     add ax, dx	; ax +=	dl (col	num)
     54
     55	010E  BB 0002				     mov bx, 2
     56	0111  F7 E3				     mul bx	; (dx, ax) = ax	* 2
     57
Turbo Assembler	 Version 4.1	    02/10/24 21:48:08	    Page 2
prog.asm



     58	0113  8B D8				     mov bx, ax
     59	0115  26: 89 0F				     mov word ptr es:[bx], cx
     60
     61	0118  5A				     pop dx
     62	0119  C3				     ret
     63	011A					     endp
     64				     ;--------------------------------------
     65
     66				     ;--------------------------------------
     67				     ; Modifies	symbol attr (applies & operation with attr mask)
     68				     ; Entry:	     dh	- line num
     69				     ;		     dl	- col num
     70				     ;		     ch	- attr mask
     71				     ; Assumes:	     es	= 0b800h
     72				     ; Destr:	     ax, bx
     73				     ;--------------------------------------
     74	011A			     ModSymbolAttr   proc
     75
     76	011A  52				     push dx
     77
     78	011B  8A C6				     mov al, dh
     79	011D  B3 50				     mov bl, ScreenWidth
     80	011F  F6 E3				     mul bl	; ax = dh * ScreenWidth
     81
     82	0121  32 F6				     xor dh, dh
     83	0123  03 C2				     add ax, dx	; ax +=	dl (col	num)
     84
     85	0125  BB 0002				     mov bx, 2
     86	0128  F7 E3				     mul bx	; (dx, ax) = ax	* 2
     87
     88	012A  8B D8				     mov bx, ax
     89	012C  43				     inc bx ; attr address
     90
     91	012D  26: 20 2F				     and byte ptr es:[bx], ch
     92
     93	0130  5A				     pop dx
     94	0131  C3				     ret
     95	0132					     endp
     96				     ;--------------------------------------
     97
     98				     ;--------------------------------------
     99				     ; Draws frame
    100				     ; Entry:
    101				     ; Assumes:	     es	= 0b800h
    102				     ; Destr:	     ax, bx, cx, dx
    103				     ;--------------------------------------
    104	0132			     DrawFrame	     proc
    105
    106						     ; init attr
    107	0132  B5 4E				     mov ch, FrameColorAttr
    108
    109	0134  B6 05				     mov dh, FrameBegLine
    110
    111						     ; top empty line
    112	0136  B1 20				     mov cl, Space
    113	0138  E8 002E				     call DrawFrameEmptyLine
    114	013B  FE C6				     inc dh
Turbo Assembler	 Version 4.1	    02/10/24 21:48:08	    Page 3
prog.asm



    115
    116						     ; top line
    117	013D  B1 C9				     mov cl, TLCorner
    118	013F  B4 CD				     mov ah, HLine
    119	0141  B0 BB				     mov al, TRCorner
    120	0143  E8 0032				     call DrawFrameLine
    121
    122						     ; middle lines
    123	0146  FE C6		     DFWhile:	     inc dh
    124	0148  80 FE 0C				     cmp dh, FrameHeight - 3 + FrameBegLine
    125	014B  77 0B				     ja	DFWhileEnd
    126
    127	014D  B1 BA				     mov cl, VLine
    128	014F  B4 20				     mov ah, Space
    129	0151  B0 BA				     mov al, VLine
    130	0153  E8 0022				     call DrawFrameLine
    131	0156  EB EE				     jmp DFWhile
    132	0158			     DFWhileEnd:
    133
    134						     ; bottom line
    135	0158  B1 C8				     mov cl, BLCorner
    136	015A  B4 CD				     mov ah, HLine
    137	015C  B0 BC				     mov al, BRCorner
    138	015E  E8 0017				     call DrawFrameLine
    139	0161  FE C6				     inc dh
    140
    141						     ; bottom empty line
    142	0163  B1 20				     mov cl, Space
    143	0165  E8 0001				     call DrawFrameEmptyLine
    144
    145	0168  C3				     ret
    146	0169					     endp
    147				     ;---------------------------------------
    148
    149				     ;---------------------------------------
    150				     ; Draws one line of fram (1 symbol	+ n symbols + 1	symbol)
    151				     ;
    152				     ; Entry:	     dh	- line number
    153				     ;		     ch	- color	attr
    154				     ;		     cl	- empty	symbol
    155				     ; Assumes:	     es	= 0b800h
    156				     ;
    157				     ; Destr:	     ax, bx, cl, dl
    158				     ;--------------------------------------
    159	0169			     DrawFrameEmptyLine	     proc
    160
    161	0169  B2 14				     mov dl, FrameBegCol
    162
    163						     ; while (dl++ < FrameWidth	+ FrameBegCol -	1):
    164						     ;	     DrawSymbol()
    165	016B  80 FA 3B		     DFLEwhile:	     cmp dl, FrameWidth	+ FrameBegCol -	1
    166	016E  77 07				     ja	DFLEwhileEnd
    167
    168	0170  E8 FF90				     call DrawSymbol
    169
    170	0173  FE C2				     inc dl
    171	0175  EB F4				     jmp DFLEwhile
Turbo Assembler	 Version 4.1	    02/10/24 21:48:08	    Page 4
prog.asm



    172	0177			     DFLEwhileEnd:
    173
    174	0177  C3				     ret
    175	0178					     endp
    176
    177				     ;--------------------------------------
    178
    179				     ;--------------------------------------
    180				     ; Draws one line of fram (1 symbol	+ n symbols + 1	symbol)
    181				     ;
    182				     ; Entry:	     dh	- line number
    183				     ;		     ch	- color	attr
    184				     ;		     cl	- left symbol
    185				     ;		     ah	- middle symbol
    186				     ;		     al	- right	symbol
    187				     ; Assumes:	     es	= 0b800h
    188				     ;
    189				     ; Destr:	     ax, bx, cl, dl
    190				     ;-------------------------------------
    191	      =0024		     MidSymNumber    equ FrameWidth - 4
    192
    193	0178			     DrawFrameLine   proc
    194
    195	0178  50				     push ax ; right and middle	symbols
    196	0179  50				     push ax
    197	017A  51				     push cx ; left symbol
    198
    199						     ; write empty symbol
    200	017B  B2 14				     mov dl, FrameBegCol
    201	017D  B1 20				     mov cl, Space
    202	017F  E8 FF81				     call DrawSymbol
    203
    204						     ; write left symbol
    205	0182  FE C2				     inc dl
    206	0184  5B				     pop bx
    207	0185  8A CB				     mov cl, bl
    208	0187  E8 FF79				     call DrawSymbol
    209
    210						     ; write middle symbols
    211	018A  5B				     pop bx
    212	018B  8A CF				     mov cl, bh
    213
    214						     ; while (dl++ < MidSymNumber + (FrameBegCol + 1)):
    215						     ;	     DrawSymbol()
    216	018D  FE C2		     DFLwhile:	     inc dl
    217	018F  80 FA 39				     cmp dl, MidSymNumber + (FrameBegCol + 1)
    218	0192  77 05				     ja	DFLwhileEnd
    219
    220	0194  E8 FF6C				     call DrawSymbol
    221
    222	0197  EB F4				     jmp DFLWhile
    223	0199			     DFLwhileEnd:
    224						     ; write right symbol
    225	0199  5B				     pop bx
    226	019A  8A CB				     mov cl, bl
    227	019C  E8 FF64				     call DrawSymbol
    228
Turbo Assembler	 Version 4.1	    02/10/24 21:48:08	    Page 5
prog.asm



    229						     ; write empty symbol
    230	019F  FE C2				     inc dl
    231	01A1  B1 20				     mov cl, Space
    232	01A3  E8 FF5D				     call DrawSymbol
    233
    234	01A6  C3				     ret
    235	01A7					     endp
    236
    237				     ;--------------------------------------
    238
    239				     ;--------------------------------------
    240				     ; Draws shadow
    241				     ;
    242				     ; Entry:
    243				     ; Assumes:	     es	= 0b800h
    244				     ;
    245				     ; Destr:
    246				     ;--------------------------------------
    247	01A7			     DrawShadow	     proc
    248
    249	01A7  B5 87				     mov ch, ShadowAttrMask
    250	01A9  B6 06				     mov dh, FrameBegLine + 1
    251	01AB  B2 3C				     mov dl, FrameBegCol + FrameWidth
    252
    253	01AD  80 FE 0F		     DSvertWhile:    cmp dh, FrameBegLine + FrameHeight
    254	01B0  77 0E				     ja	DSvertWhileEnd
    255
    256	01B2  E8 FF65				     call ModSymbolAttr
    257	01B5  FE C2				     inc dl
    258	01B7  E8 FF60				     call ModSymbolAttr
    259	01BA  FE CA				     dec dl
    260
    261	01BC  FE C6				     inc dh
    262	01BE  EB ED				     jmp DSvertWhile
    263	01C0			     DSvertWhileEnd:
    264	01C0  FE CE				     dec dh
    265
    266	01C2  80 FA 16		     DShorWhile:     cmp dl, FrameBegCol + 2 ; 2 symbols margin
    267	01C5  72 07				     jb	DShorWhileEnd
    268
    269	01C7  E8 FF50				     call ModSymbolAttr
    270	01CA  FE CA				     dec dl
    271	01CC  EB F4				     jmp DShorWhile
    272	01CE			     DShorWhileEnd:
    273
    274	01CE  C3				     ret
    275	01CF					     endp
    276				     ;--------------------------------------
    277
    278				     ;--------------------------------------
    279				     ; Paints console in blue
    280				     ;
    281				     ; Entry:
    282				     ; Assumes:	     es	= 0b800h
    283				     ; Destr:	     ch, bx
    284				     ;--------------------------------------
    285	01CF			     MakeConsoleBrightAgain  proc
Turbo Assembler	 Version 4.1	    02/10/24 21:48:08	    Page 6
prog.asm



    286
    287	01CF  B5 1F				     mov ch, 00011111b
    288	01D1  BB 0001				     mov bx, 1
    289
    290	01D4  81 FB 1040	     MCBAwhile:	     cmp bx, ScreenHeight * ScreenWidth	* 2
    291	01D8  77 07				     ja	MCBAwhileEnd
    292
    293	01DA  26: 88 2F				     mov byte ptr es:[bx], ch
    294	01DD  43				     inc bx
    295	01DE  43				     inc bx
    296
    297	01DF  EB F3				     jmp MCBAwhile
    298	01E1			     MCBAwhileEnd:
    299
    300	01E1  C3				     ret
    301	01E2					     endp
    302				     ;--------------------------------------
    303
    304				     ;======================================
    305	01E2			     main:
    306	01E2  BB B800				     mov bx, 0b800h
    307	01E5  8E C3				     mov es, bx	; videomem seg
    308
    309	01E7  E8 FFE5				     call MakeConsoleBrightAgain
    310
    311	01EA  E8 FF45				     call DrawFrame
    312	01ED  E8 FFB7				     call DrawShadow
    313
    314						     EOP
1   315	01F0  B8 4C00				     mov ax, 4c00h
1   316	01F3  CD 21				     int 21h
    317
    318				     end	     Start
Turbo Assembler	 Version 4.1	    02/10/24 21:48:08	    Page 7
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/10/24"
??FILENAME			  Text	 "prog	  "
??TIME				  Text	 "21:48:07"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0707H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 PROG
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BLCORNER			  Number 00C8
BRCORNER			  Number 00BC
DFLEWHILE			  Near	 DGROUP:016B
DFLEWHILEEND			  Near	 DGROUP:0177
DFLWHILE			  Near	 DGROUP:018D
DFLWHILEEND			  Near	 DGROUP:0199
DFWHILE				  Near	 DGROUP:0146
DFWHILEEND			  Near	 DGROUP:0158
DRAWFRAME			  Near	 DGROUP:0132
DRAWFRAMEEMPTYLINE		  Near	 DGROUP:0169
DRAWFRAMELINE			  Near	 DGROUP:0178
DRAWSHADOW			  Near	 DGROUP:01A7
DRAWSYMBOL			  Near	 DGROUP:0103
DSHORWHILE			  Near	 DGROUP:01C2
DSHORWHILEEND			  Near	 DGROUP:01CE
DSVERTWHILE			  Near	 DGROUP:01AD
DSVERTWHILEEND			  Near	 DGROUP:01C0
FRAMEBEGCOL			  Number 0014
FRAMEBEGLINE			  Number 0005
FRAMECOLORATTR			  Number 004E
FRAMEHEIGHT			  Number 000A
FRAMEWIDTH			  Number 0028
HLINE				  Number 00CD
MAIN				  Near	 DGROUP:01E2
MAKECONSOLEBRIGHTAGAIN		  Near	 DGROUP:01CF
MCBAWHILE			  Near	 DGROUP:01D4
MCBAWHILEEND			  Near	 DGROUP:01E1
MIDSYMNUMBER			  Number 0024
MODSYMBOLATTR			  Near	 DGROUP:011A
SCREENHEIGHT			  Number 001A
SCREENWIDTH			  Number 0050
SHADOWATTRMASK			  Number 0087
SPACE				  Number 0020
START				  Near	 DGROUP:0100
TLCORNER			  Number 00C9
TRCORNER			  Number 00BB
VLINE				  Number 00BA
Turbo Assembler	 Version 4.1	    02/10/24 21:48:08	    Page 8
Symbol Table




Macro Name

EOP

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  01F5 Word	  Public  CODE
